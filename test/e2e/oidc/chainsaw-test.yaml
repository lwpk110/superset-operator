apiVersion: chainsaw.kyverno.io/v1alpha1
kind: Test
metadata:
  name: oidc
spec:
  bindings:
  - name: keycloak_realm
    value: kubedoop
  - name: keycloak_client_id
    value: auth2-proxy
  - name: keycloak_client_secret
    value: auth2-proxy
  - name: keycloak_user
    value: user
  - name: keycloak_password
    value: password
  steps:
  - name: install postgresql
    try:
    - script:
        content: |
          bash ../setup/postgres-install.sh
    - assert:
        file: ../setup/postgres-assert.yaml
  - name: install keycloak
    try:
    - script:
        env:
        - name: NAMESPACE
          value: ($namespace)
        - name: KEYCLOAK_REALM
          value: ($keycloak_realm)
        - name: KEYCLOAK_USER
          value: ($keycloak_user)
        - name: KEYCLOAK_PASSWORD
          value: ($keycloak_password)
        - name: KEYCLOAK_CLIENT_ID
          value: ($keycloak_client_id)
        - name: KEYCLOAK_CLIENT_SECRET
          value: ($keycloak_client_secret)
        content: |
          cat keycloak-config.yaml | envsubst | kubectl apply -n $NAMESPACE -f -
    - apply:
        file: keycloak-install.yaml
    - assert:
        timeout: 4m
        file: keycloak-assert.yaml
  - name: deploy authentication classes
    try:
    - script:
        env:
        - name: NAMESPACE
          value: ($namespace)
        - name: KEYCLOAK_REALM
          value: ($keycloak_realm)
        - name: KEYCLOAK_CLIENT_ID
          value: ($keycloak_client_id)
        - name: KEYCLOAK_CLIENT_SECRET
          value: ($keycloak_client_secret)
        content: |
          echo "Deploying the superset with Keycloak authentication class"
          eval "echo \"$(cat keycloak-authenticationclass.yaml)\"" | kubectl apply -n $NAMESPACE -f -
    - assert:
        file: keycloak-authenticationclass-assert.yaml
  - name: install superset cluster
    try:
    - apply:
        file: superset.yaml
    - assert:
        file: superset-assert.yaml
  - name: test superset OIDC authentication
    try:
      - apply:
          file: ../setup/testing-tools-install.yaml
      - assert:
          file: ../setup/testing-tools-assert.yaml
      - script:
          env:
            - name: NAMESPACE
              value: ($namespace)
          content: |
            echo "env subst from oidc-login-assert.py"
            envsubst < oidc-login-assert.py | kubectl exec -n $NAMESPACE -i testing-tools-0 -- tee /tmp/oidc-login-assert.py > /dev/null

            echo "asserting the OIDC login"
            kubectl exec -n $NAMESPACE testing-tools-0 -- python /tmp/oidc-login-assert.py
